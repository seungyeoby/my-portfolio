generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ItemCondition {
  id             BigInt                        @id @default(autoincrement())
  itemId         BigInt                        @map("item_id")
  condition_key  item_conditions_condition_key
  conditionValue String                        @map("condition_value")
  item           Item                          @relation(fields: [itemId], references: [itemId])

  @@index([itemId], map: "item_conditions_item_id_fkey")
  @@map("item_conditions")
}

model Item {
  itemId         BigInt          @id @default(autoincrement()) @map("item_id")
  categoryId     BigInt          @map("category_id")
  itemLabel      String          @map("item_label")
  checklistItems ChecklistItem[]
  itemConditions ItemCondition[]
  itemReviews    ItemReview[]
  itemCategory   ItemCategory    @relation(fields: [categoryId], references: [categoryId])

  @@index([categoryId], map: "items_category_id_fkey")
  @@map("items")
}

model ItemCategory {
  categoryId    BigInt @id @default(autoincrement()) @map("category_id")
  categoryLabel String @map("category_label")
  items         Item[]

  @@map("item_category")
}

model ChecklistItem {
  id            BigInt    @id @default(autoincrement())
  checklistId   BigInt    @map("checklist_id")
  itemId        BigInt    @map("item_id")
  added_by_user Boolean
  removedByUser Boolean   @map("removed_by_user")
  checklist     Checklist @relation(fields: [checklistId], references: [checklistId])
  item          Item      @relation(fields: [itemId], references: [itemId])

  @@index([checklistId], map: "checklist_items_checklist_id_fkey")
  @@index([itemId], map: "checklist_items_item_id_fkey")
  @@map("checklist_items")
}

model Checklist {
  checklistId    BigInt                    @id @default(autoincrement()) @map("checklist_id")
  userId         BigInt                    @map("user_id")
  title          String                    @map("title")
  travelType     checklists_travel_type    @map("travel_type")
  transportation checklists_transportation
  with_pet       Boolean
  with_baby      Boolean
  with_elderly   Boolean
  visit_japan    Boolean
  cityId         BigInt?                   @map("city_id")
  travelStart    DateTime                  @map("travel_start") @db.Date
  travelEnd      DateTime                  @map("travel_end") @db.Date
  createdAt      DateTime                  @map("created_at") @db.DateTime(0)
  isShared       Boolean                   @map("is_shared")
  content        String                    @map("content") @db.Text
  likes          BigInt                    @map("likes")
  checklistItems ChecklistItem[]
  cities         City?                     @relation(fields: [cityId], references: [cityId])
  user           User                      @relation(fields: [userId], references: [userId])

  @@index([cityId], map: "checklists_city_id_fkey")
  @@index([userId], map: "checklists_user_id_fkey")
  @@map("checklists")
}

model User {
  userId               BigInt                 @id @default(autoincrement()) @map("user_id")
  nickname             String                 @unique @map("nickname")
  email                String                 @unique @map("email")
  password             String                 @map("password")
  birthDate            DateTime               @map("birth_date") @db.Date
  profilePhoto         String?                @map("profile_photo")
  gender               users_gender?          @map("gender")
  authority            Authority              @default(USER) @map("authority")
  checklists           Checklist[]
  itemReviews          ItemReview[]
  refresh_tokens       refresh_tokens[]
  user_favorite_item_r user_favorite_item_r[]

  @@map("users")
}

model refresh_tokens {
  id         BigInt   @id @default(autoincrement())
  user_id    BigInt
  token      String   @unique
  expires_at DateTime
  created_at DateTime @default(now())
  is_revoked Boolean  @default(false)
  users      User     @relation(fields: [user_id], references: [userId], onDelete: Cascade)

  @@index([user_id], map: "refresh_tokens_user_id_fkey")
}

model ItemReview {
  reviewId             BigInt                 @id @default(autoincrement()) @map("review_id")
  userId               BigInt                 @map("user_id")
  title                String                 @map("title")
  content              String                 @map("content") @db.Text
  image                String?                @map("image")
  likes                BigInt                 @map("likes")
  createdAt            DateTime               @map("created_at") @db.Date
  itemId               BigInt                 @map("item_id")
  deletedAt            DateTime?              @map("deleted_at") @db.Date
  item                 Item                   @relation(fields: [itemId], references: [itemId])
  user                 User                   @relation(fields: [userId], references: [userId])
  user_favorite_item_r user_favorite_item_r[]

  @@index([itemId], map: "item_reviews_item_id_fkey")
  @@index([userId], map: "item_reviews_user_id_fkey")
  @@map("item_reviews")
}

model TravelTip {
  id       BigInt @id @default(autoincrement())
  title    String @map("title")
  content  String @map("content") @db.Text
  category String

  @@map("travel_tips")
}

model City {
  cityId    BigInt      @id @default(autoincrement()) @map("city_id")
  cityName  String      @map("city_name")
  checklist Checklist[]

  @@map("cities")
}

model user_favorite_item_r {
  id           BigInt     @id @default(autoincrement())
  user_id      BigInt
  review_id    BigInt
  favorited_at DateTime   @db.Date
  deleted_at   DateTime?  @db.Date
  item_reviews ItemReview @relation(fields: [review_id], references: [reviewId])
  users        User       @relation(fields: [user_id], references: [userId])

  @@index([review_id], map: "user_favorite_item_r_review_id_fkey")
  @@index([user_id], map: "user_favorite_item_r_user_id_fkey")
}

enum Authority {
  USER
  ADMIN
}

enum item_conditions_condition_key {
  NEW
  USED
  DAMAGED
}

enum checklists_travel_type {
  BUSINESS
  LEISURE
  ADVENTURE
}

enum checklists_transportation {
  CAR
  PLANE
  TRAIN
  BUS
}

enum users_gender {
  MALE
  FEMALE
  OTHER
}

enum PackingBag {
  HAND
  HOLD
}
